[pytest]
# Pytest configuration for comprehensive vibe-check-mcp testing
minversion = 6.0

# Test discovery and execution
testpaths = tests
python_files = test_*.py *_test.py
python_functions = test_*
python_classes = Test*

# Async support
asyncio_mode = auto

# Output and reporting
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --cov=src/vibe_check
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=30
    --ignore=src/vibe_check/logs/
    --ignore=examples/
    --ignore=validation/

# Test markers for categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions  
    security: Security-focused tests for input validation and safety
    performance: Performance and benchmark tests
    edge_case: Edge case and boundary condition tests
    novel_query: Novel query and stress testing scenarios
    e2e: End-to-end workflow tests
    slow: Tests that take significant time to run
    external: Tests requiring external services (GitHub, Claude API)
    mcp: Tests specific to MCP protocol functionality
    github: Tests requiring GitHub API access
    claude: Tests requiring Claude API access
    requires_network: Tests requiring internet connectivity
    critical: Critical regression tests for high-risk scenarios
    high: High-priority regression tiers for security-sensitive checks
    medium: Medium-priority regression tiers for regression suites
    regression: Full regression scenarios spanning multiple subsystems
    
# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:github.*
    ignore::UserWarning:urllib3.*
